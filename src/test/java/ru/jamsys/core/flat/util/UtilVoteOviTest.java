package ru.jamsys.core.flat.util;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class UtilVoteOviTest {

    @Test
    void get() {
        Assertions.assertEquals("""
                üî• –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∏ –≥–æ–ª –û–≤–∏, –∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–±–∏–ª! üöÄ
                –°–ª–µ–¥—É—é—â–∏–π –º–∞—Ç—á —É–∂–µ —Å–∫–æ—Ä–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å —Å–Ω–æ–≤–∞ üòâ""", UtilVoteOvi.get(10, true));

        Assertions.assertEquals("""
                üö® –û–≤–∏ –∑–∞–±–∏–ª, –Ω–æ –í—ã –Ω–µ –ø–æ–≤–µ—Ä–∏–ª–∏ –≤ –Ω–µ–≥–æ!
                –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –±—ã–≤–∞–µ—Ç! –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –µ—â—ë –æ–¥–∏–Ω —à–∞–≥ –∫ —Ä–µ–∫–æ—Ä–¥—É —Å–¥–µ–ª–∞–Ω.
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ üòâ""", UtilVoteOvi.get(3, false));

        Assertions.assertEquals("""
                –≠—Ö, –û–≤–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –∑–∞–±–∏–ª, –∞ –í—ã –±—ã–ª–∏ —É–≤–µ—Ä–µ–Ω—ã –≤ –≥–æ–ª–µ‚Ä¶
                –ù–æ –Ω–∏—á–µ–≥–æ, –≥–ª–∞–≤–Ω–æ–µ ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –∞ —Å–ª–µ–¥—É—é—â–∏–π –º–∞—Ç—á —É–∂–µ –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏!
                –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —É–≥–∞–¥–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä–µ üòâ""", UtilVoteOvi.get(0, true));

        Assertions.assertEquals("""
                üéØ –í—ã –±—ã–ª–∏ –ø—Ä–∞–≤—ã ‚Äî —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ –≥–æ–ª–æ–≤ –æ—Ç –û–≤–∏.
                –ù–µ –µ–≥–æ –¥–µ–Ω—å, –Ω–æ –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! –û–Ω –µ—â—ë –ø–æ–∫–∞–∂–µ—Ç, –Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω.
                –°–∫–æ—Ä–æ –Ω–æ–≤—ã–π –º–∞—Ç—á ‚Äî  –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å —Å–Ω–æ–≤–∞ üòâ""", UtilVoteOvi.get(0, false));

    }

}