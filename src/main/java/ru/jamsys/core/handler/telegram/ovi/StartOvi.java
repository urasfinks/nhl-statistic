package ru.jamsys.core.handler.telegram.ovi;

import lombok.Getter;
import lombok.Setter;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestMapping;
import ru.jamsys.NhlStatisticApplication;
import ru.jamsys.core.component.ServicePromise;
import ru.jamsys.core.extension.builder.ArrayListBuilder;
import ru.jamsys.core.extension.builder.HashMapBuilder;
import ru.jamsys.core.extension.http.ServletResponseWriter;
import ru.jamsys.core.flat.util.OviStatisticMessage;
import ru.jamsys.core.flat.util.UtilNHL;
import ru.jamsys.core.flat.util.telegram.Button;
import ru.jamsys.core.handler.promise.PlayerStatistic;
import ru.jamsys.core.handler.promise.RegisterNotification;
import ru.jamsys.core.jt.JTOviSubscriber;
import ru.jamsys.core.promise.Promise;
import ru.jamsys.core.promise.PromiseGenerator;
import ru.jamsys.core.resource.jdbc.JdbcRequest;
import ru.jamsys.core.resource.jdbc.JdbcResource;
import ru.jamsys.telegram.TelegramCommandContext;
import ru.jamsys.telegram.TelegramNotification;
import ru.jamsys.telegram.handler.OviGoalsBotCommandHandler;

import java.util.List;
import java.util.Map;

@SuppressWarnings("unused")
@Setter
@Getter
@Component
@RequestMapping("/start/**")
public class StartOvi implements PromiseGenerator, OviGoalsBotCommandHandler {

    private final ServicePromise servicePromise;

    public StartOvi(ServicePromise servicePromise) {
        this.servicePromise = servicePromise;
    }

    @Override
    public Promise generate() {
        return servicePromise.get(getClass().getSimpleName(), 12_000L)
                .extension(promise -> promise.setRepositoryMapClass(StartOvi.class, this))
                .thenWithResource("subscribe", JdbcResource.class, (_, _, promise, jdbcResource) -> {
                    TelegramCommandContext context = promise.getRepositoryMapClass(TelegramCommandContext.class);
                    List<Map<String, Object>> result = jdbcResource.execute(new JdbcRequest(JTOviSubscriber.SELECT)
                            .addArg("id_chat", context.getIdChat())
                    );
                    if (result.isEmpty()) {
                        promise.setRepositoryMapClass(Boolean.class, true);
                        jdbcResource.execute(new JdbcRequest(JTOviSubscriber.INSERT)
                                .addArg("id_chat", context.getIdChat())
                                .addArg("user_info", context.getUserInfo())
                                .addArg("playload", context.getUriParameters().getOrDefault("playload", ""))
                        );
                        return;
                    }
                    if (!"0".equals(result.getFirst().get("remove").toString())) {
                        promise.setRepositoryMapClass(Boolean.class, true);
                        jdbcResource.execute(new JdbcRequest(JTOviSubscriber.UPDATE_REMOVE)
                                .addArg("id_chat", context.getIdChat())
                                .addArg("remove", 0)
                        );
                        return;
                    }
                    promise.setRepositoryMapClass(Boolean.class, false);
                })
                .then("check", (_, _, promise) -> {
                    TelegramCommandContext context = promise.getRepositoryMapClass(TelegramCommandContext.class);
                    if (!promise.getRepositoryMapClass(Boolean.class)) {
                        RegisterNotification.add(new TelegramNotification(
                                context.getIdChat(),
                                context.getTelegramBot().getBotUsername(),
                                "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã",
                                null,
                                null
                        ));
                        promise.skipAllStep("already notification");
                    }
                })
                .then("ovi", new PlayerStatistic(UtilNHL.getOvi(), UtilNHL.getOviScoreLastSeason()).generate())
                .then("send", (_, _, promise) -> {
                    TelegramCommandContext context = promise.getRepositoryMapClass(TelegramCommandContext.class);
                    PlayerStatistic ovi = promise.getRepositoryMapClass(Promise.class, "ovi")
                            .getRepositoryMapClass(PlayerStatistic.class);
                    RegisterNotification.add(new TelegramNotification(
                            context.getIdChat(),
                            context.getTelegramBot().getBotUsername(),
                            String.format("""
                                            –ü—Ä–∏–≤–µ—Ç! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö —É–∑–Ω–∞–≤–∞—Ç—å –æ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º –≥–æ–ª–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –û–≤–µ—á–∫–∏–Ω–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
                                            
                                            –ü–æ–¥–¥–µ—Ä–∂–∏–º –û–≤–∏ –Ω–∞ –ø—É—Ç–∏ –∫ –≤–µ–ª–∏—á–∏—é! üèíüî•
                                            
                                             %s
                                            """,
                                    OviStatisticMessage.get(ovi)
                            ),
                            null,
                            null
                    ));
                    RegisterNotification.addDeferred(new TelegramNotification(
                            context.getIdChat(),
                            context.getTelegramBot().getBotUsername(),
                            """
                                    –¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:
                                    
                                    /stats ‚Äî –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ–∑–æ–Ω—É
                                    /poll_results ‚Äî –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
                                    /schedule ‚Äî –ë–ª–∏–∂–∞–π—à–∏–µ –∏–≥—Ä—ã –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –û–≤–µ—á–∫–∏–Ω–∞ –∏ –∫–æ–º–∞–Ω–¥—ã Washington Capitals
                                    /prediction ‚Äî –ö–æ–≥–¥–∞ –û–≤–µ—á–∫–∏–Ω –ø–æ–±—å–µ—Ç —Ä–µ–∫–æ—Ä–¥ –ì—Ä–µ—Ç—Ü–∫–∏?
                                    /quiz ‚Äî –ù–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç—ã –∑–Ω–∞–µ—à—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –û–≤–µ—á–∫–∏–Ω–∞?
                                    /bets ‚Äî –°—Ç–∞–≤–∫–∏ –Ω–∞ –û–≤–µ—á–∫–∏–Ω–∞
                                    /stop ‚Äî –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                                    """,
                            null,
                            null
                    ), System.currentTimeMillis() + 10_000L);

                    RegisterNotification.addDeferred(new TelegramNotification(
                            context.getIdChat(),
                            context.getTelegramBot().getBotUsername(),
                            "–ü–æ–±—å–µ—Ç –ª–∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –û–≤–µ—á–∫–∏–Ω —Ä–µ–∫–æ—Ä–¥ –£—ç–π–Ω–∞ –ì—Ä–µ—Ç—Ü–∫–∏ –≤ —ç—Ç–æ–º —Å–µ–∑–æ–Ω–µ?",
                            new ArrayListBuilder<Button>()
                                    .append(new Button(
                                            "–î–∞ üî•",
                                            ServletResponseWriter.buildUrlQuery(
                                                    "/vote/",
                                                    new HashMapBuilder<String, String>()
                                                            .append("g", "Ovi")
                                                            .append("p", UtilNHL.getOvi().getPlayerID())
                                                            .append("v", "true")
                                            )
                                    ))
                                    .append(new Button(
                                            "–ù–µ—Ç ‚õî",
                                            ServletResponseWriter.buildUrlQuery(
                                                    "/vote/",
                                                    new HashMapBuilder<String, String>()
                                                            .append("g", "Ovi")
                                                            .append("p", UtilNHL.getOvi().getPlayerID())
                                                            .append("v", "false")

                                            )
                                    ))
                            ,
                            null
                    ), System.currentTimeMillis() + 20_000L);

                    RegisterNotification.addDeferred(new TelegramNotification(
                            context.getIdChat(),
                            context.getTelegramBot().getBotUsername(),
                            """
                                    –ü–æ–∫–∞ –û–≤–∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –∏–≥—Ä–µ, —É —Ç–µ–±—è –µ—Å—Ç—å –º–∏–Ω—É—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ –Ω—ë–º? üî•
                                    
                                    –ü—Ä–æ–π–¥–∏ –Ω–∞—à –∫–≤–∏–∑ –∏ —É–∑–Ω–∞–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç—ã –∑–Ω–∞–µ—à—å –∫–∞—Ä—å–µ—Ä—É –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –û–≤–µ—á–∫–∏–Ω–∞! üèíüí™
                                    
                                    ‚ö°Ô∏è 10 –≤–æ–ø—Ä–æ—Å–æ–≤, 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤ ‚Äì —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —Ä–µ–∫–æ—Ä–¥—ã. –°–º–æ–∂–µ—à—å –Ω–∞–±—Ä–∞—Ç—å 10/10?
                                    
                                    –ñ–º–∏ ¬´–ù–∞—á–∞—Ç—å¬ª –∏ –ø–æ–∫–∞–∂–∏, –∫—Ç–æ –∑–¥–µ—Å—å –≥–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –û–≤–∏!""",
                            new ArrayListBuilder<Button>()
                                    .append(new Button("–ù–∞—á–∞—Ç—å üöÄ")
                                            .setWebapp("https://quiz.ovechkingoals.ru/?utm_source=bot_menu&mode=tg")
                                    )
                            ,
                            null
                    ), System.currentTimeMillis() + 30_000L);
                })
                .extension(NhlStatisticApplication::addOnError);
    }

}
